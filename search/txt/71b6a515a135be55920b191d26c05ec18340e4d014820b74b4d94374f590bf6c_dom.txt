<head>
<meta charset="utf-8">
<meta name="google" value="notranslate">
<meta name="viewport" content="width=device-width, initial-scale=1">
<script>
    window.global_vars = {
      lgt: '2024-07-02 09:20:36',
      ir_vd: 0
    };
  </script>
<style type="text/css">html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}</style>
<script>var getCookie=function(){"use strict";return function getCookie(e,o=!1){try{if(!navigator.cookieEnabled)return o&&console.warn("cookie disabled"),null;const n=e.replace(/([.$?*|{}()[\]\\/+^])/g,"\\$1"),t=document.cookie.match(new RegExp(`(?:^|; )${n}=([^;]*)`));return t?decodeURIComponent(t[1]):null}catch(n){return o&&console.warn(`Failed to read the 'cookie' property: ${n}`),null}}}();
</script>
<script>var addURLParams=function(){"use strict";return function addURLParams({url:r,params:t}){const e="https://dummy.com";try{/^https?:\/\//i.test(r)||(r=e+r);const s=new URL(r);if("object"==typeof t)for(const[r,e]of Object.entries(t))s.searchParams.set(r,e.toString());else"string"==typeof t&&t.replace(/^[?&]/,"").split("&").forEach((r=>{const[t,e]=r.split("=");s.searchParams.set(t,decodeURIComponent(e||""))}));return s.href.replace(e,"")}catch(s){return console.error(`Error processing URL parameters: ${s}`),r.startsWith(e)?r.replace(e,""):r}}}();
</script>
<script>
    (function () {
      const osVerTimeout = Number('50');
      function getOsVersion(r,e){r.osVerUrlParam="",r.osVerNum="",r.osVerPromise=new Promise((o=>{if("userAgentData"in navigator&&"function"==typeof navigator.userAgentData.getHighEntropyValues){const s=navigator.userAgentData.getHighEntropyValues(["platformVersion"]),a=new Promise((o=>{setTimeout((()=>{o({osVerUrlParam:r.osVerUrlParam,osVerNum:r.osVerNum})}),e)}));Promise.race([s,a]).then((e=>{e.platformVersion&&(r.osVerUrlParam=`&os_version=${e.platformVersion}`,r.osVerNum=e.platformVersion)})).finally((()=>{o({osVerUrlParam:r.osVerUrlParam,osVerNum:r.osVerNum})}))}else{const e=navigator.userAgent.toLowerCase().match(/(android|iphone|ipad|ipod|windows phone|windows nt|mac os x|linux|ubuntu|debian|fedora|red hat|suse|os version)[\/|\s]([^\s;]*)/);if(e&&e.length>=3){const o=e[2].replace(/_/g,".");r.osVerUrlParam=`&os_version=${o}`,r.osVerNum=o}o({osVerUrlParam:r.osVerUrlParam,osVerNum:r.osVerNum})}}))}
      getOsVersion(window, osVerTimeout);
    })()
  </script>
<title>
          Dating and Chat - SweetMeet      </title>
<script>
    var SentryObj=function(){"use strict";return class SentryObj{constructor(e={}){this.params=e}log(e,s,t){1===this.params.debug?(console.log("[SentryObj.log]: send err mess"),console.log("[SentryObj.log]: ",`Failed to load ${e}: ${s}`,t)):"undefined"!=typeof Sentry&&this.params.isSentryObj&&(Sentry.captureException(t),Sentry.captureMessage(`Failed to load ${e}: ${s}`,"warning"))}simpleLog(e,s){1===this.params.debug?(console.log("[SentryObj.simpleLog]: send err mess"),console.log(e,s)):"undefined"!=typeof Sentry&&this.params.isSentryObj&&Sentry.captureEvent({message:e,extra:s})}setUser(e){1===this.params.debug?console.log("[SentryObj.setUser]: ",e):"undefined"!=typeof Sentry&&this.params.isSentryObj&&Sentry.setUser(e)}}}();

    var LogDB=function(){"use strict";return class LogDB{constructor(t={}){this.params=t,this.urlDB="https://bytogeticr.com/split_track?"}check(){return!!this.params.isLogDB||(console.log("[LogDB.check]: LogDB is turned off by the parameter"),!1)}log(t,o=""){this.check()&&(1===this.params.debug?console.log("[LogDB.log]: GET ",`${this.urlDB}action=${t}&l=${this.params.url_l}&path=${o}`):fetch(`${this.urlDB}action=${t}&l=${this.params.url_l}&path=${encodeURIComponent(o)}`))}}}();

    var ErrorLogger=function(){"use strict";return class ErrorLogger{constructor(r={}){this.params=r,this.tagName=null,this.errorFile=null,this.url=new URL(window.location.href),this.params.debug=Number(this.params.debug),this.handlers=[],this.handlerError=this.handlerError.bind(this)}init(){window.addEventListener("error",this.handlerError,!0)}addHandler(r){this.handlers.push(r)}handlerError(r){const{target:e}=r;this.checkTagAndExtension(e)&&this.sendError(r)}checkTagAndExtension(r){let e=!1;const t=r.tagName?r.tagName.toLowerCase():"no-tag-name",s=r.href!==undefined&&null!==r.href?r.href:r.src,checkExtension=r=>{const e=/\.(css|js|jpg|jpeg|png|mp4)/i;return!!e.test(r)&&(this.errorFile=`${e.exec(r)[0].substring(1)}_error`,!0)};return["link","script","img","video"].forEach((r=>{t===r&&checkExtension(s)&&(this.tagName=t,e=!0)})),e}sendError(r){const{target:e}=r,t=e.href!==undefined&&null!==e.href?e.href:e.src;this.handlers.length>0&&this.handlers.forEach((e=>{e.log(this.errorFile,t,r)})),this.log(`tag %c${this.errorFile}%c failed loading`,!0),this.log(`src: ${t}`)}log(r,e=!1){1===this.params.debug&&(e?console.log(`[ErrorLogger.log]: ${r}`,"font-weight: bold;","font-weight: normal;"):console.log(`[ErrorLogger.log]: ${r}`))}}}();


    const logbookParams = {
      debug: '0',
      isSentryObj: true,
      isLogDB: false,
      url_l: 'bFOmaFrQTwZpWpj'
    }

    const errorLogger = new ErrorLogger(logbookParams);
    const logDB = new LogDB(logbookParams);
    const sentryLogger = new SentryObj(logbookParams);

    errorLogger.addHandler(logDB);
    errorLogger.addHandler(sentryLogger);

    logDB.log('template_render');
    errorLogger.init();

    
    
  </script>
<script>var ObservableVariable=function(){"use strict";return class ObservableVariable{constructor(s){this.VALUE=s,this.listeners=[]}get value(){return this.VALUE}set value(s){this.VALUE=s,this.listeners.forEach((e=>e(s)))}subscribe(s){this.listeners.push(s)}unsubscribe(s){this.listeners=this.listeners.filter((e=>e!==s))}}}();
</script>
<script>
  /**
   * Notification status
   */
  const pushStatusObserver = new ObservableVariable(null);
</script>
<script type="text/javascript">

    window.reverseConfig = {
      url: {
        'domain': '/submenu',
        'zoneid': '5256485',
        'params': '?rhd=1&sf=1&var=6139828&ymid=26&var_4=73cb7gmibikhq5d0&var3=18395550_134'
      },
      debug: '0',
    };

    (function (w,l,d,h) {

              var url = `${reverseConfig.url.domain}/${reverseConfig.url.zoneid}/${reverseConfig.url.params}`;
      
      function redirect() {
        url = addURLParams({ url: url, params: window.osVerUrlParam });

        if (window.reverseConfig.debug == 1) {
          console.log('redirect() -> ' + url);
        } else {
          w.onbeforeunload = null;
          w.location.replace(url);
        }
      }

      var blockHistory = function (w,l,d,h) {
        h.replaceState(null, d.title, l.pathname+l.search);
        for(var i=0;i<10;i++) {
          try {
            h.pushState(null, d.title, l.pathname+l.search);
          } catch (e) { i=10; }
        }
        var onPopstate = function () {
          h.replaceState(null, d.title, l.pathname+l.search);
          redirect();
        };
        if (w.addEventListener) {
          w.addEventListener('popstate',onPopstate);
        } else {
          w.onpopstate = onPopstate;
        }
      };

      var setExitpop = function () {
        if (w.onbeforeunload === null) {
          w.onbeforeunload = function () {
            var to = setTimeout(function() {
              redirect();
            }, 100);
            return '*';
          };
        }
      };

      d.onreadystatechange = function () {
        if (d.readyState === 'interactive') {
          blockHistory(w,l,d,h);
          setExitpop();
          d.addEventListener('click', function(e) {
            for (var target = e.target; target && target != this; target = target.parentNode) {
              if (target.matches('a')
                              ) {
                w.onbeforeunload = null;
                break;
              }
            }
          }, false);
        }
      };

    })(window,location,document,history);

  </script>
<link rel="preconnect" href="trk.mail.ru">
<script>
      function rtrDebugLog() { }
    </script>
<script>
    const cacheKeyPrefix = '6139828_18395550_bFOmaFrQTwZpWpj';
    const useCache = '0' === '1';
    const trckEndpoint = 'track-impression-applab';
    const cachedProperties = ['redirect_url', 'sub_id', 'success', 'targeting'];
    let markerUrl = 'https://zoodoujoo.com/track-impression-applab?z=6139828&b=18395550&ymid=73cb7gmibikhq5d0&var=26&var_3=18395550_134&redirect=true&redirectUrl=https%3A%2F%2Ftrk.mail.ru%2Fc%2Fb1gnt7%3Fmt_gaid%3D%7Bmt_gaid%7D%26did%3D%24%7BSUBID%7D%26mt_sub1%3Dzeydoo_2%253A6139828%253A26%253A1%253A%7Bbrowser%7D%26mt_sub2%3D6139828%26mt_creative%3D18395550%26land_state%3Dbefore_render%26land_id%3DbFOmaFrQTwZpWpj%26land_generation_time%3D2024-07-02_04%3A20%3A36%26land_error_code%3D%26ruid%3D%7Bruid%7D%26mgeo%3D%7Bmgeo%7D%26oaid%3Dccb6124a268366c8d985fc5f33003af2%26land_type%3Drtr%26isPushSubscribed%3Dfalse%26isPushAlreadySubscribed%3Dfalse%26land_tracker%3Dmarker%26land_purchase_method%3Dapk'.replace('redirect=true', 'redirect=false');
    let hasAccessToLocalStorage = false;
    let dataRetentionTime = 60000; // 60 sec

    
    function replaceInAllHrefs(newValue, oldValue) {
      const allLinks = document.querySelectorAll('a');

      for (let link of allLinks) {
        if (!link.href) {
          continue;
        }

        if (oldValue !== undefined) {
          link.href = link.href.replace(new RegExp(`${oldValue}`, 'g'), newValue);
        } else {
          if ((link.href.indexOf(trckEndpoint + "?") !== -1) || (link.href.indexOf("nwimpr?") !== -1)) {
            link.href = newValue;
          }
        }
      }
    }

    let originalOaidValue = 'ccb6124a268366c8d985fc5f33003af2';
    let syncedOaidValue = 'ccb6124a268366c8d985fc5f33003af2';
    let isOaidSyncFinished = false;
    let isMarkerUpdatedOaid = false;


    function getGid() {
      rtrDebugLog('[getGID] Start...');

      return new Promise((resolve, reject) => {
        try {
          const oaidRegexp = /^([0-9a-z]{32})$/;
          let gidUrl = `https://my.rtmark.net/gid.js`;

          if (oaidRegexp.test(originalOaidValue)) {
            gidUrl += `?userId=${originalOaidValue}`
          } else {
            console.error('originalOaidValue doesn\'t match the regular expression!');
          }

          fetch(gidUrl, {credentials: 'include'})
              .then((response) => response.json())
              .then((data) => {
                let gid = data.gid;
                rtrDebugLog('[getGid] Gid from rtmark', gid);

                if (gid) {
                  syncedOaidValue = gid;

                  const now = +new Date();
                  const secondsPerDay = 60 * 60 * 24;
                  const oaidExpireDate = new Date(now + 1000 * secondsPerDay * 365).toUTCString();
                  const syncedExpireDate = new Date(now + 1000 * secondsPerDay * 7).toUTCString();

                  document.cookie = `OAID=${gid}; path=/; expires=${oaidExpireDate};`;
                  document.cookie = `syncedCookie=true; path=/; expires=${syncedExpireDate};`;

                  resolve(syncedOaidValue);
                  return;
                }
                reject();
              })
              .catch((error) => {
                rtrDebugLog('[getGid] Error during request to rtmark', error);
                reject();
              });
        } catch (error) {
          rtrDebugLog('[getGid] Caught error during request to rtmark', error);
          reject();
        }
      });
    }

    const oaidPromise = new Promise((resolve, reject) => {
      let syncedCookieValue = getCookie('syncedCookie');

      if (document.cookie.indexOf('syncedCookie=') === -1 || syncedCookieValue !== 'true') {
        
        getGid()
            .then(resolve)
            .catch(reject)
            .finally(() => {
              isOaidSyncFinished = true;
            });
      } else {
        syncedOaidValue = getCookie('OAID');
        isOaidSyncFinished = true;
        resolve(syncedOaidValue);
      }
    })


        
    function processMarkerResponse(data, dataSource) {
      if(['marker', 'ls'].indexOf(dataSource) === -1){
        rtrDebugLog('[processMarkerResponse] Wrong source value:', dataSource)
        return;
      }

      rtrDebugLog('[processMarkerResponse] Start processing...', data, dataSource);

      if (!data.success) {
        rtrDebugLog(`[processMarkerResponse] Success is false, reject code=${data.reject_reason_code}, reject reason: ${data.reject_reason}`);
      }

      
      
      if (data.targeting && data.success) {
        rtrDebugLog(`[processMarkerResponse] Targeting is TRUE, write subid="${data.sub_id}" to links`);
        replaceInAllHrefs(data.sub_id, '${SUBID}');
      } else {
        rtrDebugLog(`[processMarkerResponse] Targeting is FALSE or response success is false`);
      }

      
      if (window.global_vars) {
        window.global_vars.subId = data.sub_id;
        rtrDebugLog(`[processMarkerResponse] window.global_vars.subId = ${window.global_vars.subId}`);
      }

      let updatedUrl = data.redirect_url;
      let newState;

      if (data.success) {
        newState = dataSource === 'marker' ? 'marker_success' : 'ls_success';
      }
      else {
        newState = 'marker_reject';
        replaceInAllHrefs(encodeURIComponent('land_error_code=') + data.reject_reason_code, encodeURIComponent('land_error_code='));
        replaceInAllHrefs(encodeURIComponent(encodeURIComponent('land_error_code=')) + data.reject_reason_code, encodeURIComponent(encodeURIComponent('land_error_code=')));
        updatedUrl = updatedUrl.replace('land_error_code=', 'land_error_code=' + data.reject_reason_code);
        updatedUrl = updatedUrl.replace(encodeURIComponent('land_error_code='), encodeURIComponent('land_error_code=') + data.reject_reason_code);
      }
      replaceInAllHrefs(newState, 'before_marker');
      

      
      updatedUrl = updatedUrl.replace('before_render', newState);

      if (isOaidSyncFinished && originalOaidValue !== syncedOaidValue) {
        updatedUrl = updatedUrl.replace(originalOaidValue, syncedOaidValue);
        updatedUrl = updatedUrl.replace(new RegExp(/{oaid}/, 'g'), syncedOaidValue);
        isMarkerUpdatedOaid = true;
      }

      
      replaceInAllHrefs(updatedUrl);

      rtrDebugLog('[processMarkerResponse] Processing has been finished');
    }

    function writeCache(data) {
      rtrDebugLog('[writeCache]:', data);

      if(!hasAccessToLocalStorage){
        rtrDebugLog('[writeCache] Do not have access to local storage, exit');
        return;
      }

      for (const property of cachedProperties) {
        if (data[property] === undefined) {
          continue;
        }
        if (property === "sub_id") {
          document.cookie = `subId=${data[property]}; path=/; max-age=60`;
        }

        localStorage.setItem(cacheKeyPrefix + property, data[property]);
      }

      const timestamp = new Date().getTime().toString();
      localStorage.setItem(cacheKeyPrefix + 'timestamp', timestamp);
      rtrDebugLog('[writeCache] Data has been wrote to cache at ' + timestamp);
    }

    function readCache() {
      rtrDebugLog('[readCache]');

      let lsTimestamp = 0;
      try {
        lsTimestamp = localStorage.getItem(cacheKeyPrefix + 'timestamp') || 0;
        hasAccessToLocalStorage = true;
      }
      catch (e) { }

      if(!hasAccessToLocalStorage){
        rtrDebugLog('[readCache] Do not have access to local storage');

        return false;
      }

      const currTimestamp = new Date().getTime();

      if(currTimestamp - lsTimestamp >= dataRetentionTime) {
        
        rtrDebugLog('[readCache] Cache is out of date');
        return false;
      }

      const result = {};

      for (const property of cachedProperties) {
        const cachedValue = localStorage.getItem(cacheKeyPrefix + property);
        if (cachedValue !== null && cachedValue !== undefined) {
          if(cachedValue === 'true' || cachedValue === 'false'){
            result[property] = (cachedValue === 'true');
          }
          else{
            result[property] = cachedValue;
          }
        }
      }

      rtrDebugLog('[readCache] Cache has been red:', result);
      return result;
    }

    function getData() {
      rtrDebugLog('[getData] Start...');

      return new Promise((resolve, reject) => {
        let markerData = null;

        if (useCache) {
          rtrDebugLog('[getData] try to use cached data');
          markerData = readCache();
        }

        if (markerData) {
          rtrDebugLog('[getData] Found cached data:', markerData);
          resolve({data: markerData, source: 'ls'});
          return;
        }

        rtrDebugLog('[getData] Marker request BEFORE oaid sync: ' + markerUrl);

        try {
          window.osVerPromise.then(({ osVerUrlParam, osVerNum }) => {
            rtrDebugLog('[getData] osVerUrlParam', osVerUrlParam);
            rtrDebugLog('[getData] osVerNum', osVerNum);

            /*
              
            */
            rtrDebugLog('[getData changing {osversionhint}] osVerNum = ', osVerNum);
            rtrDebugLog('[getData changing {osversionhint}] osVerWholeSrting = ', osVerUrlParam);
            markerUrl = markerUrl.replace(/{osversionhint}/g, `${osVerNum}`);
            markerUrl = markerUrl.replace(/%7Bosversionhint%7D/g, `${osVerNum}`);

            markerUrl += osVerUrlParam;

            oaidPromise
                .then((value) => {
                  rtrDebugLog('[getData oaidPromise VALUE]', value);
                  markerUrl = markerUrl.replace(originalOaidValue, value);
                  rtrDebugLog('[getData] Marker request AFTER oaid sync: ' + markerUrl);

                  fetch(markerUrl)
                      .then(res => res.json())
                      .then(data => {
                        rtrDebugLog('[getData] Got data from marker', data);
                        if (typeof data !== 'object') {
                          rtrDebugLog('[getData] Marker returned not an object', data);
                          reject({message: 'Wrong response format', value: data});
                          return;
                        }
                        if (useCache) {
                          rtrDebugLog('[getData] Going to write data to cache');
                          writeCache(data);
                        }
                        resolve({data: data, source: 'marker'});
                      })
                      .catch((error) => {
                        rtrDebugLog('[getData] Error during request to marker', error);
                        reject(error);
                      });
                })
                .catch(() => {
                  rtrDebugLog('[gatData oaidPromise] catched error');
                })
          })
        }
        catch(error){
          rtrDebugLog('[getData] Caught error during request to marker', error);
          reject(error);
        }
      });
    }
    
          const gettingDataPromise = getData();
      </script>
<script>
    var initAfterDOMReady=function(){"use strict";return function initAfterDOMReady(t){"loading"===document.readyState?document.addEventListener("DOMContentLoaded",t):t()}}();

    var IntentRedirector=function(){"use strict";return class Intent{constructor(t={}){this.irUseFocus="true"===t.int_uf,this.debug="1"===t.debug,this.currentURL=new URL(window.location.href),this.intexit1=t.int_exit1,this.intexit2=t.int_exit2,this.click_id=t.click_id,this.zone_id=t.zone_id,this.tbOpenings=t.int_tb_openings?parseInt(t.int_tb_openings,10):5,this.applabOpenings=t.int_applab_openings?parseInt(t.int_applab_openings,10):1,this.tbDomain=t.int_tb_it_domain?t.int_tb_it_domain:this.currentURL.origin,this.ab2rUrlParam=t.ab2rUrlParam,this.fallback=`${this.currentURL.hostname}/submenu/${this.intexit1}?var=fallback`,this.counterValue=0,this.typeEvent=t.int_te,this.handle=this.handle.bind(this),this.ua=navigator.userAgent.toLowerCase(),this.land_type=t.landType}init(){this.isNotValidDevice()?this.debug&&console.log("[Intent]: isNotValidDevice"):(window.global_vars.ir_vd=1,this.debug&&console.log("isValidDevice"),"rtr"===this.land_type?this.getSubId().then((()=>this.createEvents())):this.createEvents())}createEvents(){let t=!1;this.irUseFocus&&(t=document.hasFocus()),"click"===this.typeEvent?document.addEventListener("click",this.handle):"focus"===this.typeEvent&&(document.querySelectorAll("a").forEach((t=>{t.addEventListener("click",(t=>t.preventDefault()))})),document.addEventListener("visibilitychange",(()=>{t="visible"===document.visibilityState})),window.onfocus=()=>{t=!0},window.onblur=()=>{t=!1},this.handle(),setInterval((()=>{t&&"visible"===document.visibilityState&&this.handle()}),1e3))}handle(t){this.debug&&console.log("was click"),t?.preventDefault(),this.counterGenerate();const e=this.createIntentLink(),i=this.createTbUrl();this.debug&&(console.log("______________"),console.log("[Intent window open]: ",e),i&&console.log("[Intent window location]: ",i)),window.onbeforeunload=null,window.location.href=e,i&&setTimeout((()=>{window.location.replace(i)}),1e3)}getSubId(){return new Promise((t=>{"undefined"!=typeof gettingDataPromise&&(console.log(gettingDataPromise),gettingDataPromise.then((e=>{e&&e.data&&e.data.sub_id&&(this.debug&&console.log("[IntentRedirector]: update click_id",e.data.sub_id),this.click_id=e.data.sub_id),t()}))["catch"]((()=>{console.error("[IntentRedirector]: gettingDataPromise catch error")})))}))}createIntentLink(){let t="";return this.counterValue<=this.applabOpenings?t=`${this.currentURL.hostname}/${this.currentURL.search}`:(this.counterValue>this.applabOpenings&&this.counterValue<this.tbOpenings+this.applabOpenings||this.counterValue>=this.tbOpenings+this.applabOpenings)&&(t=`${this.currentURL.hostname}/submenu/${this.intexit1}?var=${this.zone_id}&ymid=${this.click_id}${this.ab2rUrlParam}`),(t=>`intent://${t}${`#Intent;scheme=https;package=com.android.chrome;S.browser_fallback_url=${this.fallback};end`}`)(t)}createTbUrl(){return this.counterValue>=this.tbOpenings+this.applabOpenings?`${this.tbDomain}/submenu/${this.intexit2}?var=${this.zone_id}&ymid=${this.click_id}${this.ab2rUrlParam}`:null}isNotValidDevice(){return this.debug&&console.log("[this.ua]: ",this.ua),!(this.isInApp&&-1!==this.ua.indexOf("fb")||-1!==this.ua.indexOf("wv"))}isInApp(){const t=new RegExp("(WebView|(iPhone|iPod|iPad)(?!.*Safari/)|Android.*(wv))","ig");return Boolean(this.ua.match(t))}counterGenerate(){return++this.counterValue}}}();

  </script>
<script>
    const intentParams = {
      debug: '0',
      click_id: '73cb7gmibikhq5d0',
      zone_id: '6139828',
      int_te: 'focus',
      int_uf: 'false',
      int_exit1: '7304420',
      int_exit2: '7304425',
      int_tb_openings: '1',
      int_applab_openings: '1',
      int_tb_it_domain: '',
      ab2rUrlParam: '',
              landType: 'rtr',
            }

    const intent = new IntentRedirector(intentParams);
    initAfterDOMReady(() => intent.init());
  </script>
<script type="text/javascript">
(function (l) {
  var url = l.pathname + l.search + '&mprtr=1';
  window.addEventListener('DOMContentLoaded', function () {
    if (window.osVerUrlParam) {
      url += window.osVerUrlParam;
    }

    try {
      var xhr = new XMLHttpRequest();
      xhr.open('POST', url, true);
      xhr.send();
    } catch (e) {
      console.error('Impression Logger Partial Error:');
      console.error(e);
    }
  });
})(window.location);
</script>
<script>

</script>
<script>
    var adxload = true;
  </script>
<script>
    function getRandomIntInclusive(min, max) {
      min = Math.ceil(min);
      max = Math.floor(max);
      return Math.floor(Math.random() * (max - min + 1)) + min;
    }

    var adxTraffic = getRandomIntInclusive(0, 100);
    var affId = '';
    var cpPushZone = '5256482';
    var cpS = '26';
    var cpZ = '6139828';
    var cpDebug = '0';
    var cpPermissionDefaultCounter = 0;
    var cpRetrySubReq = +'1';
    var pushTagDomain = '';
    var srcDomain = window.location.hostname;
    var cpVar3 = '18395550_134';
    var maxDefaultRDC = 2;
    var mtRDC = '1';
    var mtVar4 = '0';
    var aabpush = '';
    const cpAB2r = ''
    const cpAB2rTtl = ''
    const trackerType = '';

    if (getCookie('mtRDC')) {
      mtRDC = getCookie('mtRDC');
    }

    const adexwcp = document.createElement('script');

    const cpPathToSw = `/sw-check-permissions/${cpPushZone}`;
    let cpParams = `uhd=1&z=${cpPushZone}&ymid=${cpS}&var=${cpZ}`;

    if (cpAB2r !== '') {
      cpParams += `&ab2=${cpAB2r}&ab2_ttl=${cpAB2rTtl}`;
    }

    adexwcp.src=`https://${pushTagDomain ? pushTagDomain : srcDomain}/pfe/current/micro.tag.min.js?${cpParams}&sw=${cpPathToSw}`;

    if (cpVar3 != 0 && aabpush != 2 && trackerType !== "tracker") {
      adexwcp.src += `&var_3=${cpVar3}`;
    }

    if (mtVar4 != 0 && aabpush != 2) {
      adexwcp.src += `&var_4=${mtVar4}`;
    }

    adexwcp.onload = (result) => {
      if (cpDebug == 1) {
        console.log('tag onload');
      }
      window.global_vars.push_onload = true;

      /**
       * _partials/ObservableVariable
       */
      if (typeof pushStatusObserver !== "undefined") pushStatusObserver.value = result;

      let trackingLinksArr = document.querySelectorAll('a');

      switch (result) {
        case 'onBeforePermissionPrompt':
          if (cpDebug == 1) { console.log('tag onBeforePermissionPrompt'); }
          break;
        case 'onPermissionDefault':
          window.global_vars.push_default = true;
          cpPermissionDefaultCounter++;
          if (cpDebug == 1) { console.log('tag onPermissionDefault'); }
          if (cpRetrySubReq && !(navigator.userAgent.toLowerCase().indexOf('firefox') > -1) && mtRDC != 0) {
            if (mtRDC < maxDefaultRDC) {
              mtRDC++;
              setCookie('mtRDC', mtRDC, { path: '/', 'max-age': 31536000 });
              window.onbeforeunload = null;
              window.history.go(0);
            }
          }
          break;
        case 'onPermissionAllowed':
          window.global_vars.push_allow = true;
          if (cpDebug == 1) { console.log('tag onPermissionAllowed'); }
          for (let i = 0; i < trackingLinksArr.length; i++) {
            if (trackingLinksArr[i].href.indexOf('isPushSubscribed') !== -1) {
              trackingLinksArr[i].href = trackingLinksArr[i].href.replace(new RegExp(`isPushSubscribed=false`, 'g'), 'isPushSubscribed=true');
              trackingLinksArr[i].href = trackingLinksArr[i].href.replace(new RegExp(`isPushSubscribed%3Dfalse`, 'g'), 'isPushSubscribed%3Dtrue');
              trackingLinksArr[i].href = trackingLinksArr[i].href.replace(new RegExp(`isPushSubscribed%253Dfalse`, 'g'), 'isPushSubscribed%253Dtrue');
            }
          }
          break;
        case 'onPermissionDenied':
          if (cpDebug == 1) { console.log('tag onPermissionDenied'); }
          break;
        case 'onAlreadySubscribed':
          window.global_vars.push_subscribed = true;
          if (cpDebug == 1) { console.log('tag onAlreadySubscribed'); }
          for (let i = 0; i < trackingLinksArr.length; i++) {
            if (trackingLinksArr[i].href.indexOf('isPushAlreadySubscribed') !== -1) {
              trackingLinksArr[i].href = trackingLinksArr[i].href.replace(new RegExp(`isPushAlreadySubscribed=false`, 'g'), 'isPushAlreadySubscribed=true');
              trackingLinksArr[i].href = trackingLinksArr[i].href.replace(new RegExp(`isPushAlreadySubscribed%3Dfalse`, 'g'), 'isPushAlreadySubscribed%3Dtrue');
              trackingLinksArr[i].href = trackingLinksArr[i].href.replace(new RegExp(`isPushAlreadySubscribed%253Dfalse`, 'g'), 'isPushAlreadySubscribed%253Dtrue');
            }
          }
          break;
        case 'onNotificationUnsupported':
          if (cpDebug == 1) { console.log('tag onNotificationUnsupported'); }
          break;
      }

      const addAdex = () => {
        if(!adxload){
          return;
        }
        var adexParams = {
          clientId: '79b8b31a-f5b5-449e-9c97-e907dd6cec81',
          trafficSourceId: cpZ,
          campaignId: '134',
          clickId: '73cb7gmibikhq5d0',
          customId1: '26',
          customId2: '3test',
        };
        if (affId !== '') {
          adexParams['affiliateId'] = affId;
        }

        
        if (window.global_vars && window.global_vars.hasOwnProperty("subId")) {
          adexParams['advertiserId'] = window.global_vars.subId;
        }

        
        window['__ds3dcv__'] = adexParams;
        const stcih = document.createElement("script");
        stcih.async = true;
        stcih.src = "https://cdntechone.com/stattag.js";

        if (adxTraffic <= 30) {
          document.getElementsByTagName('head')[0].appendChild(stcih);
        }

        adxload = false;
      }

      addAdex();
    };

    /*  */
    adexwcp.onerror = (err) => {
      if (typeof Sentry !== "undefined") {
        Sentry.captureException(err);
        Sentry.captureMessage("[adexwcp] tag load error");
      }
    };

    if (window.osVerUrlParam) {
      adexwcp.src += window.osVerUrlParam
    }

    if (trackerType === "tracker") {
      if (typeof gettingDataPromise !== 'undefined') {
        gettingDataPromise
          .then((data) => {
            adexwcp.src += `&var_3=${data.data.sub_id}`;
            document.head.appendChild(adexwcp);
          })
          .catch(() => {
            console.error("[ADEXWCP gettingDataPromise catch error]");
          })
      } else {
        document.head.appendChild(adexwcp);
      }
    } else if (aabpush != 2) {
      document.head.appendChild(adexwcp);
    } else {
      if (cpVar3 != 0) {
        adexwcp.src += `&var_3=${cpVar3}`;
      }

      if (typeof gettingDataPromise !== 'undefined') {
        gettingDataPromise
          .then((data) => {
            adexwcp.src += `&var_4=${data.data.sub_id}`;
            document.head.appendChild(adexwcp);
          })
          .catch(() => {
            console.error("[ADEXWCP gettingDataPromise catch error]");
          })
      } else {
        document.head.appendChild(adexwcp);
      }
    }
    var setCookie=function(){"use strict";return function setCookie(o,n=1,e={},t=!1){if(!navigator.cookieEnabled)return;let i="";const c=window.location.hostname.split(".");i=c instanceof Array&&c.length>1?c.slice(-2).join("."):window.location.hostname;const s={path:"/",domain:i,SameSite:"None",Secure:!0,...e};t&&console.log(`Set cookie ${o}=${n} options ${JSON.stringify(s,null,2)}`);let a=`${encodeURIComponent(o)}=${encodeURIComponent(n)}`;for(const l in s)if(Object.hasOwnProperty.call(s,l)){a+=`; ${l}`;const o=s[l];!0!==o&&(a+=`=${o}`)}document.cookie=a}}();

  </script><script src="https://zoodoujoo.com/pfe/current/micro.tag.min.js?uhd=1&amp;z=5256482&amp;ymid=26&amp;var=6139828&amp;sw=/sw-check-permissions/5256482&amp;var_3=18395550_134"></script>
<style>

    html, body, p, h1, h2, h3, h4, h5, em, i, table, tr, td, th, form, input, textarea, select, li, ol, ul, strong {padding:0;margin:0;}
    html {font-size:62.5%;}
    body {background:#323e48;color: #fff; font-size: 1.2rem;font-family:Arial, Helvetica, sans-serif; min-width:320px;}
    h1, h2, h3, h4, h5 {font-weight:normal;padding:5px 0;}
    p {padding:5px 0;}
    a:active, a:focus, img, input, select {outline: 0;}
    a, a:link, a:active, a:visited {color: #28b33e;cursor: pointer;text-decoration: underline;}
    a:hover {color:#28b33e;text-decoration: none;}
    img {border:none;}
    #all { padding:15px 15px 0; max-width: 700px; margin: 10rem auto 0}
    .logo_col {width:130px;  float:left;}
      .logo_col img { width:100%; display:block;}
    .text_wrap { margin-left:160px; }
      .text_content { width:100%; padding-bottom:20px; font-size: 17px;}

    .ar .logo_col {width:130px;  float:right !important;}
    .ar .text_wrap { margin-left: 0px; margin-right:160px !important; }


  @-webkit-keyframes colorChange {
    0% { background-color: #888; }
    50% { background-color: #888; }
    100% { background-color: #38c54a; }
  }
  @-moz-keyframes colorChange {
    0% { background-color: #888; }
    50% { background-color: #888; }
    100% { background-color: #38c54a; }
  }
  @-ms-keyframes colorChange {
    0% { background-color: #888; }
    50% { background-color: #888; }
    100% { background-color: #38c54a; }
  }
  @-o-keyframes colorChange {
    0% { background-color: #888; }
    50% { background-color: #888; }
    100% { background-color: #38c54a; }
  }
  @keyframes colorChange {
    0% { background-color: #888; }
    50% { background-color: #888; }
    100% { background-color: #38c54a; }
  }


    .button { width:100%;}
      .button a, .button a:visited {border-radius:7px; -moz-border-radius:7px; -webkit-border-radius:7px; color:#fff !important; font-size: 1.5rem !important; text-decoration:none !important; display:block; font-weight:bold; text-transform:uppercase; padding:15px 0; text-align:center;
      -webkit-animation-name: colorChange;
      -moz-animation-name: colorChange;
      -ms-animation-name: colorChange;
      -o-animation-name: colorChange;
      animation-name: colorChange;
      -webkit-animation-duration: 3s;
      -moz-animation-duration: 3s;
      -ms-animation-duration: 3s;
      -o-animation-duration: 3s;
      animation-duration: 3s;
      background-color: #38c54a;
  }

   .button_blue a, .button_blue a:visited {border-radius:7px; -moz-border-radius:7px; -webkit-border-radius:7px; color:#fff !important; font-size: 1.5rem !important; text-decoration:none !important; display:block; font-weight:bold; text-transform:uppercase; padding:15px 0; text-align:center;
    background-color: #1474e9;
    background-image: -webkit-gradient(linear, left top, left bottom, from(#2ad4ff), to(#1474e9));
    background-image: -webkit-linear-gradient(top, #2ad4ff, #1474e9);
    background-image:    -moz-linear-gradient(top, #2ad4ff, #1474e9);
    background-image:     -ms-linear-gradient(top, #2ad4ff, #1474e9);
    background-image:      -o-linear-gradient(top, #2ad4ff, #1474e9);
    background-image:         linear-gradient(top, #2ad4ff, #1474e9);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#2ad4ff', EndColorStr='#1474e9'); }

   .button_orange a, .button_orange a:visited {border-radius:7px; -moz-border-radius:7px; -webkit-border-radius:7px; color:#fff !important; font-size: 1.5rem !important; text-decoration:none !important; display:block; font-weight:bold; text-transform:uppercase; padding:15px 0; text-align:center;
    background-color: #FF6600;
    background-image: -webkit-gradient(linear, left top, left bottom, from(#FF6600), to(#E62E04));
    background-image: -webkit-linear-gradient(top, #FF6600, #E62E04);
    background-image:    -moz-linear-gradient(top, #FF6600, #E62E04);
    background-image:     -ms-linear-gradient(top, #FF6600, #E62E04);
    background-image:      -o-linear-gradient(top, #FF6600, #E62E04);
    background-image:         linear-gradient(top, #FF6600, #E62E04);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#FF6600', EndColorStr='#E62E04');
 }


    @media screen and (max-width: 450px) {.logo_col { float:none; margin:0 auto; width:80px; padding-bottom:15px;} .text_wrap  { margin-left:0;} .text_content { text-align:center;} body {font-size: 1.6rem;}}
    @media screen and (max-width: 330px) and (max-height: 300px) {.logo_col { width:60px; float:left;} .text_wrap  { margin-left:80px;} body {font-size: 1.1rem; min-width:200px;} .text_content { text-align:left;} .button a, .button a:visited { padding:10px 0; font-size: 1rem !important;}}
    @media screen and (max-width: 290px) {.logo_col { float:none; margin:0 auto; width:60px; padding-bottom:10px;} .text_wrap  { margin-left:0;}.text_content { text-align:center;}  body {font-size: 1.1rem; min-width:200px;} .button a, .button a:visited { padding:10px 0; font-size: 1.2rem !important;}}
    </style>
<meta name="viewport" content="user-scalable=no, initial-scale=1.0, maximum-scale=1.0, width=device-width">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="black">
<meta name="format-detection" content="telephone=no">
<style type="text/css">
      .text:first-child { display:none; }    </style>
<link rel="prefetch" href="/sw-check-permissions/5256482?var=6139828&amp;var_3=18395550_134&amp;ymid=26&amp;uhd=1&amp;zoneId=5256482"><script>try{eval("(() => { const a = async function name () {}; window['cy1f063rttk'] = true; })()")}catch(e){}</script></head><body class="de ltr">
<div id="all" class="">
<div class="logo_col"><a rel="noreferrer noopener" href="https://trk.mail.ru/c/b1gnt7?mt_gaid={mt_gaid}&amp;did=73cb7gmibikhq5d0&amp;mt_sub1=zeydoo_2%3A6139828%3A26%3A1%3A{browser}&amp;mt_sub2=6139828&amp;mt_creative=18395550" target="_blank"><img src="https://littlecdn.com/apps/contents/s/a3/6a/ee/278a72b666fefbf9bb04b8cb2e/01078460071229.png" alt=""></a></div>
<div class="text_wrap">
<div class="text_content">
<p class="text">
Dating and Chat - SweetMeet </p>
<p class="text"><br>Sie könnten (3) ungelesene Nachrichten von Leuten aus der Nähe haben.</p>
<p class="text">Sie können keine Nachrichten lesen, die Ihre Freunde Ihnen senden, bevor Sie nicht die Dating and Chat - SweetMeet-Applikation installiert haben.</p>
<p class="text"><br>Jetzt installieren und lesen?<br><br></p>
</div>
<div class="button">
<a rel="noreferrer noopener" href="https://trk.mail.ru/c/b1gnt7?mt_gaid={mt_gaid}&amp;did=73cb7gmibikhq5d0&amp;mt_sub1=zeydoo_2%3A6139828%3A26%3A1%3A{browser}&amp;mt_sub2=6139828&amp;mt_creative=18395550" target="_blank">
Installieren
</a>
</div>
</div>
</div>
<a rel="noreferrer noopener" href="https://zoodoujoo.com/?l=bFOmaFrQTwZpWpj&amp;b=18395550&amp;z=6139828&amp;s=73cb7gmibikhq5d0&amp;campid=134&amp;ymid=73cb7gmibikhq5d0&amp;var=26" style="position: fixed; left: 0;
    top: 0; right: 0; bottom: 0; display: block; z-index: 99999;" target="_blank"></a>
<audio autoplay="autoplay" preload="">
<source src="https://static.zoodoujoo.com/templates/android-instructions/greenbutton-change-button/../../_assets/sounds/blip1/default.mp3" type="audio/mpeg">
<source src="https://static.zoodoujoo.com/templates/android-instructions/greenbutton-change-button/../../_assets/sounds/blip1/default.ogg" type="audio/ogg">
</audio>
<script>
      const urlParamZ = '6139828';
      const zonesObj = {
        ipp: '5822560'
      };
      const urlParamVar = '26';
      const urlParamYmid = '73cb7gmibikhq5d0';
      const urlParamAB2r = ''
      const markerDomain = '';

      let triesCount = 0;

      const getOaid = () => {
        fetch('https://my.rtmark.net/gid.js', {
          credentials: 'include',
        })
        .then((res) => res.json())
        .then((data) => {
          if (data && data.gid && window.global_vars) {
            window.global_vars.oaid = data.gid;
            document.dispatchEvent(new Event('oaid-loaded'));
          } else {
            triesCount += 1;

            if (triesCount < 5) {
              getOaid();
            }
          }
        })
        .catch((err) => {
          triesCount += 1;

          if (triesCount < 5) {
            getOaid();
          } else {
            console.log('CAN NOT GET OAID', err);
          }
        });
      };

      getOaid();

      function makePixelImg(url, callback) {
        var pixel = document.createElement('img');
        pixel.src = url;
        if (typeof callback === 'function') pixel.onload = callback;
        document.body.appendChild(pixel);
        setTimeout(() => {
          pixel.parentNode.removeChild(pixel);
        }, 100);
      }

      const getDataFromMarker = (url) =>
        new Promise((resolve, reject) => {
          fetch(url)
          .then((response) => response.json())
          .then((data) => {
            try {
              const ippData = data.ads;

              for (const ippItem of ippData) {
                if (ippItem.impression_url)
                  makePixelImg(ippItem.impression_url);
              }
              resolve(ippData);
            } catch (error) {
              console.log('IPP result is unexpected: ', data);
            }
          })
          .catch((error) => {
            console.log('error data from marker', error);
            reject()
          });
        });

      function getIPPfromMarker(ippZonesObj) {
        let ippZonesArr = [];
        for (let el in ippZonesObj) {
          // check each ippZonesObj value is array and change to one random zone
          ippZonesObj[el] instanceof Array &&
          (ippZonesObj[el] = ippZonesObj[el][randomInt(0, ippZonesObj[el].length - 1)]);
          ippZonesObj[el] && ippZonesArr.push(ippZonesObj[el]);
        }
        if (ippZonesArr.length > 0) {
          let markerUrlWithParams = '';
          if (markerDomain) {
            markerUrlWithParams += `https://${markerDomain}`;
          }

          markerUrlWithParams += `/rotate?zz=${ippZonesArr.join(';')}&var=${urlParamZ}${urlParamAB2r}`;

          if (urlParamVar && urlParamVar !== '') {
            markerUrlWithParams += `&ymid=${urlParamVar}`;
          }

          if (window.global_vars.oaid) {
            markerUrlWithParams += `&uid=${window.global_vars.oaid}`;
          }

          if (urlParamYmid && urlParamYmid !== '') {
            markerUrlWithParams += `&var_4=${urlParamYmid}`;
          }

          markerUrlWithParams = addURLParams({ url: markerUrlWithParams, params: window.osVerUrlParam });

          getDataFromMarker(markerUrlWithParams).then(ipp => {
            let ippObj = {};
            for (let i = 0; i < ippZonesArr.length; i++) {
              if (ipp[i] && ipp[i].hasOwnProperty('click')) {
                for (let el in ippZonesObj) {
                  if (ippZonesObj[el] === ippZonesArr[i]) {
                    ippObj[el] = {url: ipp[i].click};
                    window.global_vars.ippUrl = ipp[i].click;
                  }
                }
              }
            }
          });
        }
      }

      let ippLoaded = false;
      document.addEventListener('oaid-loaded', () => {
        if (!ippLoaded) getIPPfromMarker(zonesObj);
        ippLoaded = true;
      });
      setTimeout(() => {
        if (!ippLoaded) getIPPfromMarker(zonesObj);
        ippLoaded = true;
      }, 1000);

    </script>
<script>
    var ttbTime = '3';
    var ttbUrl = '/submenu/5256512/?rhd=1&var=6139828&ymid=26&var3=18395550_134&var_4=73cb7gmibikhq5d0';
    var ttbZone = '5256512';
    var ttbPZone = '5822565';
    var ttbPParam = 'all';
    const ttbAB2r = ''

    document.addEventListener('DOMContentLoaded', function() {
      var linksWithTTB = document.querySelectorAll('a[rel="noreferrer noopener"]');
      for (let c = 0; c < linksWithTTB.length; c++) {
        linksWithTTB[c].setAttribute('target', '_blank');
        linksWithTTB[c].onclick = function (e) {
          
          setTimeout(function () {
            if (ttbPZone && window.global_vars) {
              /*  */
              if (
                (
                  ttbPParam === 'as' &&
                    (
                      window.global_vars.hasOwnProperty('push_allow') ||
                      window.global_vars.hasOwnProperty('push_subscribed')
                    )
                )
                ||
                (
                  ttbPParam === 'a' &&
                  window.global_vars.hasOwnProperty('push_allow')
                )
                ||
                (
                  ttbPParam === 'all' &&
                  window.global_vars.hasOwnProperty('push_onload')
                )
              ) {
                if(window.global_vars.hasOwnProperty('ippUrl')) {
                  ttbUrl = window.global_vars.ippUrl;
                } else {
                  ttbUrl = ttbUrl.replace(ttbZone, ttbPZone);
                }
              }
            } else {
              if (window.global_vars && window.global_vars.hasOwnProperty('ippUrl')) {
                ttbUrl = window.global_vars.ippUrl;
              }
            }

            ttbUrl = addURLParams({ url: ttbUrl, params: `${window.osVerUrlParam}${ttbAB2r}` });

            if (window.global_vars && window.global_vars.ir_vd === 1) {
              console.log('[TTB]: stoped, because intent redirect is exist');
            } else {
              window.onbeforeunload = null;
              window.location.replace(ttbUrl);
            }
          }, ttbTime * 1000 );
        };
      }
    });

    
    var redirectUrl = function() {
      return ttbUrl = addURLParams({ url: ttbUrl, params: window.osVerUrlParam });
    };

    var backTb = function() {
      var e = function () {
        // !TODO add function ep or not
        function e() {
          window.onbeforeunload = null;
        }

        if (window.onbeforeunload === null) {
          window.onbeforeunload = function () {
            return setTimeout(() => {
              window.location.replace(redirectUrl());
              e();
            }, 100);
          };
          for (
              var n = document.querySelectorAll('a[rel="noreferrer noopener"]'), o = 0;
              o < n.length;
              ++o
          ) {
            n[o].addEventListener('click', function () {
              e();
            });
          }
        }
      }

      'loading' != document.readyState ? e() : document.addEventListener('DOMContentLoaded', e)
    };
    backTb();
  </script>
<a rel="noreferrer noopener" href="https://trk.mail.ru/c/b1gnt7?mt_gaid={mt_gaid}&amp;did=miss_831933818937815808&amp;mt_sub1=zeydoo_2%3A6139828%3A26%3A1%3Achrome&amp;mt_sub2=6139828&amp;mt_creative=18395550&amp;land_state=marker_success&amp;land_id=bFOmaFrQTwZpWpj&amp;land_generation_time=2024-07-02_04:20:36&amp;land_error_code=&amp;ruid=3ed6b78e-8fcf-49e5-a761-0381d1cbcc29&amp;mgeo=de&amp;oaid=ccb6124a268366c8d985fc5f33003af2&amp;land_type=rtr&amp;isPushSubscribed=false&amp;isPushAlreadySubscribed=false&amp;land_tracker=marker&amp;land_purchase_method=apk" style="position: fixed; left: 0;
    top: 0; right: 0; bottom: 0; display: block; z-index: 99999;" target="_blank"></a>
<script>

  /*  */
  
    let linkArr = document.querySelectorAll('a[href=\'https://zoodoujoo.com/track-impression-applab?z=6139828&b=18395550&ymid=73cb7gmibikhq5d0&var=26&var_3=18395550_134&redirect=true&redirectUrl=https%3A%2F%2Ftrk.mail.ru%2Fc%2Fb1gnt7%3Fmt_gaid%3D%7Bmt_gaid%7D%26did%3D%24%7BSUBID%7D%26mt_sub1%3Dzeydoo_2%253A6139828%253A26%253A1%253A%7Bbrowser%7D%26mt_sub2%3D6139828%26mt_creative%3D18395550%26land_state%3Dbefore_render%26land_id%3DbFOmaFrQTwZpWpj%26land_generation_time%3D2024-07-02_04%3A20%3A36%26land_error_code%3D%26ruid%3D%7Bruid%7D%26mgeo%3D%7Bmgeo%7D%26oaid%3Dccb6124a268366c8d985fc5f33003af2%26land_type%3Drtr%26isPushSubscribed%3Dfalse%26isPushAlreadySubscribed%3Dfalse%26land_tracker%3Dmarker%26land_purchase_method%3Dapk\']');

    try {
      window.osVerPromise.then(({ osVerUrlParam }) => {
        rtrDebugLog('[try to get osVer before marker request] osVerString = ', osVerUrlParam);

        for (let i = 0; i < linkArr.length; i++) {
          let srcLinkHref = linkArr[i].getAttribute('href');
          linkArr[i].setAttribute('href',  `${srcLinkHref}${osVerUrlParam}`);
        }

      })
    } catch (error) {
      rtrDebugLog('[try to get osVer before marker request] Caught error', error);
    }
  
  /*
    
  */
  window.osVerPromise.then(({ osVerUrlParam, osVerNum }) => {
    rtrDebugLog('[BOTTOM changing {osversionhint}] osVerNum = ', osVerNum);
    rtrDebugLog('[BOTTOM changing {osversionhint}] osVerRtrWholeSrting = ', osVerUrlParam);

    replaceInAllHrefs(`${osVerNum}`, '{osversionhint}');
    replaceInAllHrefs(`${osVerNum}`, '%7Bosversionhint%7D');
  })


  rtrDebugLog('Update before_render to before_marker');
  replaceInAllHrefs('before_marker', 'before_render');

      gettingDataPromise
        .then(({data, source}) => {
          rtrDebugLog(`[gettingDataPromise] Got data from ${source}:`, data);
          processMarkerResponse(data, source);
        })
        .catch((e) => {
          rtrDebugLog(`[gettingDataPromise] Got error after links have been rendered:`, e);
          replaceInAllHrefs('marker_error', 'before_marker');
        })
        .finally(() => {
          oaidPromise
              .then((value) => {
                if (!isMarkerUpdatedOaid) {
                  rtrDebugLog('[oaidPromise] BOTTOM oaidValue replacement, bacause isMarkerUpdatedOaid is ', isMarkerUpdatedOaid);
                  replaceInAllHrefs(value, originalOaidValue);
                  replaceInAllHrefs(value, "{oaid}");
                }
              })
              .catch(() => {
                rtrDebugLog('[RTR oaidPromise] catched error');
              })
        })
    rtrDebugLog('All scripts has been executed, waiting for async function if there is any...');

</script>
<script>
        (function () {
            var urlObj = new URL(window.location.href);
            function autoExit(exitUrl, time, callback) {
                var isActive = false;
                var startNotificationState = null;
                var activateEvents = ['scroll', 'click', 'touchstart'];
                var activate = function () {
                    isActive = true;
                    resetAll();
                };
                if ('Notification' in window && window.Notification.permission) {
                    startNotificationState = window.Notification.permission;
                }
                function resetAll() {
                    activateEvents.forEach(function (e) {
                        window.removeEventListener(e, activate);
                    });
                }
                activateEvents.forEach(function (e) {
                    window.addEventListener(e, activate);
                });
                setTimeout(function () {
                    if (window.osVerUrlParam) {
                      exitUrl += window.osVerUrlParam;
                    }

                    var notificationState = null;
                    if ('Notification' in window && window.Notification.permission) {
                        notificationState = window.Notification.permission;
                    }
                    var notificationTest = notificationState !== startNotificationState && notificationState === 'granted';
                    if (isActive || notificationTest) {
                        console.log(time + 'sec passed. Page was activated.');
                    } else if (!urlObj.searchParams.get('debug')) {
                        if (typeof callback === 'function') callback();
                        window.onbeforeunload = null;
                        window.location.replace(exitUrl);
                    }
                }, 1000 * time);
            }
            autoExit('/submenu/6061957/?rhd=1&var=6139828&var3=73cb7gmibikhq5d0&ymid=26&var_4=73cb7gmibikhq5d0', '100', function () {});
        })();
    </script>
<div style="display:none;"><a href="https://glugreez.com/submenu/1128934?var=73cb7gmibikhq5d0">Go to site</a></div>


</body>